// const express = require('express');
// const app = express();
// const dotenv = require('dotenv');
// const mongoose = require('mongoose');
// const cors = require("cors");
// app.use(express.json());

// const port = process.env.PORT || 8000;
// app.use(cors());

// const connect = async () => {
//     try{
//         await mongoose.connect(process.env.mongodb);
//         console.log("Connected");
//     } catch (error) {
//         throw error;
//     }
// };

// mongoose.connection.on("disconnected",() => {
//     console.log("disconnected")
// });

// mongoose.connection.on("connected",() => {
//     console.log("connected")
// });
// app.listen(port, () => {
//     connect();
//     console.log('Listening from ${port}');
// });
// require('dotenv').config();

// const { MongoClient } = require('mongodb');

// // Connection URI for MongoDB running locally
// const uri = 'mongodb://localhost:27017';

// // Name of the database you want to connect to
// const dbName = 'your_database_name';

// // Create a new MongoClient
// const client = new MongoClient(uri, { useNewUrlParser: true, useUnifiedTopology: true });

// // Connect to MongoDB
// async function connectToMongoDB() {
//     try {
//         await client.connect();
//         console.log('Connected to MongoDB');
//         const db = client.db(dbName);
//         // Now you can use 'db' to access your database
//     } catch (error) {
//         console.error('Error connecting to MongoDB:', error);
//     }
// }

// // Call the function to connect to MongoDB
// connectToMongoDB();
// const { MongoClient } = require('mongodb');

// // Connection URI for MongoDB running locally
// const uri = 'mongodb://localhost:27017';

// // Name of the database you want to connect to
// const dbName = 'nachi';

// // Create a new MongoClient
// const client = new MongoClient(uri);

// // Connect to MongoDB
// async function connectToMongoDB() {
//     try {
//         await client.connect();
//         console.log('Connected to MongoDB');
//         const db = client.db(dbName);
//         // Now you can use 'db' to access your database
//     } catch (error) {
//         console.error('Error connecting to MongoDB:', error);
//     }
// }

// // Call the function to connect to MongoDB
// connectToMongoDB();

const { MongoClient } = require('mongodb');

// Connection URI for MongoDB running locally
const uri = 'mongodb://localhost:27017';

// Name of the database you want to connect to
const dbName = 'your';

// Create a new MongoClient without the useNewUrlParser option
const client = new MongoClient(uri);

// Connect to MongoDB
//async function connectToMongoDB() {
//     try {
//         await client.connect();
//         console.log('Connected to MongoDB');

//         // Get the database reference
//         const db = client.db(dbName);
        
//         // Perform operations on the database
//         // For example, you can list the collections in the database
//         // Perform operations on the database
// // For example, you can list the collections in the database

//     const collections = await db.listCollections().toArray();
//     console.log('Collections:', collections.map(collection => collection.name));
// } catch (error) {
//     console.error('Error listing collections:', error);
// }

//     }


// // Call the function to connect to MongoDB
// connectToMongoDB();

const mongoose = require('mongoose');

// Connect to MongoDB
mongoose.connect('mongodb://localhost:27017/your_database_name', { useNewUrlParser: true, useUnifiedTopology: true });

// Define a schema
const Schema = mongoose.Schema;
const exampleSchema = new Schema({
    name: String,
    age: Number
});

// Create a model
const ExampleModel = mongoose.model('Example', exampleSchema);

// Create a document and save it to the collection
const exampleDocument = new ExampleModel({ name: 'John', age: 30 });
exampleDocument.save()
    .then(() => {
        console.log('Document saved successfully');
        mongoose.disconnect(); // Disconnect from MongoDB after saving the document
    })
    .catch(error => console.error('Error saving document:', error));
